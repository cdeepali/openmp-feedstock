{% set name = "openmp" %}
{% set version = "10.0.1" %}
{% set sha256 = "d19f728c8e04fb1e94566c8d76aef50ec926cd2f95ef3bf1e0a5de4909b28b44" %}
{% set openmp_ver = "4.5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version }}/openmp-{{ version }}.src.tar.xz
  sha256: {{ sha256 }}

build:
  number: 1

outputs:
  - name: llvm-openmp
    script: build-llvm-openmp.sh  # [not win]
    build:
      ignore_run_exports:
        - _openmp_mutex
      run_exports:
        strong:
          - {{ pin_subpackage("llvm-openmp", max_pin=None) }}
          - _openmp_mutex >={{ openmp_ver }}  # [linux]
          - _openmp_mutex * *_llvm            # [linux]
    requirements:
      build:
        # Use pins to control cos6/cos7 match
        - libgcc-ng  {{ libgcc }}
        - libstdcxx-ng  {{ libstdcxx }}
        - {{ compiler('cxx') }}  # [unix]
        - cmake  {{ cmake }}
        - make  {{ make }}       # [unix]
        - perl
      host:
        # Use pins to control cos6/cos7 match
        - libgcc-ng  {{ libgcc }}
        - libstdcxx-ng  {{ libstdcxx }}
        - llvmdev {{ version }}
      run_constrained:
        - clangdev {{ version }}
        - llvmdev {{ version }}
        - openmp {{ version }}
    test:
      requires:
        - clangxx {{ version }}
        - {{ compiler('cxx') }}  # [unix]
      commands:
        - test -f $PREFIX/lib/libomp.so                   # [linux]
        - test -f $PREFIX/include/omp.h                   # [unix]
        - $PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib omp_hello.c -o omp_hello  # [not win]
        - ./omp_hello            # [unix]
      files:
        - omp_hello.c

about:
  home: http://openmp.llvm.org/
  license: NCSA
  license_file: LICENSE.txt
  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
